/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceLinks } from './ReferenceLinks';
import {
    ReferenceLinksFromJSON,
    ReferenceLinksFromJSONTyped,
    ReferenceLinksToJSON,
    ReferenceLinksToJSONTyped,
} from './ReferenceLinks';

/**
 * 
 * @export
 * @interface GraphSubjectBase
 */
export interface GraphSubjectBase {
    /**
     * 
     * @type {ReferenceLinks}
     * @memberof GraphSubjectBase
     */
    links?: ReferenceLinks;
    /**
     * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
     * @type {string}
     * @memberof GraphSubjectBase
     */
    descriptor?: string;
    /**
     * This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.
     * @type {string}
     * @memberof GraphSubjectBase
     */
    displayName?: string;
    /**
     * This url is the full route to the source resource of this graph subject.
     * @type {string}
     * @memberof GraphSubjectBase
     */
    url?: string;
}

/**
 * Check if a given object implements the GraphSubjectBase interface.
 */
export function instanceOfGraphSubjectBase(value: object): value is GraphSubjectBase {
    return true;
}

export function GraphSubjectBaseFromJSON(json: any): GraphSubjectBase {
    return GraphSubjectBaseFromJSONTyped(json, false);
}

export function GraphSubjectBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphSubjectBase {
    if (json == null) {
        return json;
    }
    return {
        
        'links': json['_links'] == null ? undefined : ReferenceLinksFromJSON(json['_links']),
        'descriptor': json['descriptor'] == null ? undefined : json['descriptor'],
        'displayName': json['displayName'] == null ? undefined : json['displayName'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function GraphSubjectBaseToJSON(json: any): GraphSubjectBase {
    return GraphSubjectBaseToJSONTyped(json, false);
}

export function GraphSubjectBaseToJSONTyped(value?: GraphSubjectBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_links': ReferenceLinksToJSON(value['links']),
        'descriptor': value['descriptor'],
        'displayName': value['displayName'],
        'url': value['url'],
    };
}

