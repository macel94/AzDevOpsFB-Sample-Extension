/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GitHubConnectionRepoModel } from './GitHubConnectionRepoModel';
import {
    GitHubConnectionRepoModelFromJSON,
    GitHubConnectionRepoModelFromJSONTyped,
    GitHubConnectionRepoModelToJSON,
    GitHubConnectionRepoModelToJSONTyped,
} from './GitHubConnectionRepoModel';

/**
 * Describes Github connection's repo bulk request
 * @export
 * @interface GitHubConnectionReposBatchRequest
 */
export interface GitHubConnectionReposBatchRequest {
    /**
     * Requested repos urls
     * @type {Array<GitHubConnectionRepoModel>}
     * @memberof GitHubConnectionReposBatchRequest
     */
    gitHubRepositoryUrls?: Array<GitHubConnectionRepoModel>;
    /**
     * Operation type (f. e. add, remove)
     * @type {string}
     * @memberof GitHubConnectionReposBatchRequest
     */
    operationType?: string;
}

/**
 * Check if a given object implements the GitHubConnectionReposBatchRequest interface.
 */
export function instanceOfGitHubConnectionReposBatchRequest(value: object): value is GitHubConnectionReposBatchRequest {
    return true;
}

export function GitHubConnectionReposBatchRequestFromJSON(json: any): GitHubConnectionReposBatchRequest {
    return GitHubConnectionReposBatchRequestFromJSONTyped(json, false);
}

export function GitHubConnectionReposBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GitHubConnectionReposBatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gitHubRepositoryUrls': json['gitHubRepositoryUrls'] == null ? undefined : ((json['gitHubRepositoryUrls'] as Array<any>).map(GitHubConnectionRepoModelFromJSON)),
        'operationType': json['operationType'] == null ? undefined : json['operationType'],
    };
}

export function GitHubConnectionReposBatchRequestToJSON(json: any): GitHubConnectionReposBatchRequest {
    return GitHubConnectionReposBatchRequestToJSONTyped(json, false);
}

export function GitHubConnectionReposBatchRequestToJSONTyped(value?: GitHubConnectionReposBatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gitHubRepositoryUrls': value['gitHubRepositoryUrls'] == null ? undefined : ((value['gitHubRepositoryUrls'] as Array<any>).map(GitHubConnectionRepoModelToJSON)),
        'operationType': value['operationType'],
    };
}

