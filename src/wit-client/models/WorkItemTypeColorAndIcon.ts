/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Describes work item type name, its icon and color.
 * @export
 * @interface WorkItemTypeColorAndIcon
 */
export interface WorkItemTypeColorAndIcon {
    /**
     * The color of the work item type in hex format.
     * @type {string}
     * @memberof WorkItemTypeColorAndIcon
     */
    color?: string;
    /**
     * The work item type icon.
     * @type {string}
     * @memberof WorkItemTypeColorAndIcon
     */
    icon?: string;
    /**
     * Indicates if the work item is disabled in the process.
     * @type {boolean}
     * @memberof WorkItemTypeColorAndIcon
     */
    isDisabled?: boolean;
    /**
     * The name of the work item type.
     * @type {string}
     * @memberof WorkItemTypeColorAndIcon
     */
    workItemTypeName?: string;
}

/**
 * Check if a given object implements the WorkItemTypeColorAndIcon interface.
 */
export function instanceOfWorkItemTypeColorAndIcon(value: object): value is WorkItemTypeColorAndIcon {
    return true;
}

export function WorkItemTypeColorAndIconFromJSON(json: any): WorkItemTypeColorAndIcon {
    return WorkItemTypeColorAndIconFromJSONTyped(json, false);
}

export function WorkItemTypeColorAndIconFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemTypeColorAndIcon {
    if (json == null) {
        return json;
    }
    return {
        
        'color': json['color'] == null ? undefined : json['color'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'isDisabled': json['isDisabled'] == null ? undefined : json['isDisabled'],
        'workItemTypeName': json['workItemTypeName'] == null ? undefined : json['workItemTypeName'],
    };
}

export function WorkItemTypeColorAndIconToJSON(json: any): WorkItemTypeColorAndIcon {
    return WorkItemTypeColorAndIconToJSONTyped(json, false);
}

export function WorkItemTypeColorAndIconToJSONTyped(value?: WorkItemTypeColorAndIcon | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'color': value['color'],
        'icon': value['icon'],
        'isDisabled': value['isDisabled'],
        'workItemTypeName': value['workItemTypeName'],
    };
}

