/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentityReference } from './IdentityReference';
import {
    IdentityReferenceFromJSON,
    IdentityReferenceFromJSONTyped,
    IdentityReferenceToJSON,
    IdentityReferenceToJSONTyped,
} from './IdentityReference';
import type { ReferenceLinks } from './ReferenceLinks';
import {
    ReferenceLinksFromJSON,
    ReferenceLinksFromJSONTyped,
    ReferenceLinksToJSON,
    ReferenceLinksToJSONTyped,
} from './ReferenceLinks';

/**
 * 
 * @export
 * @interface WorkItemHistory
 */
export interface WorkItemHistory {
    /**
     * 
     * @type {number}
     * @memberof WorkItemHistory
     */
    rev?: number;
    /**
     * 
     * @type {IdentityReference}
     * @memberof WorkItemHistory
     */
    revisedBy?: IdentityReference;
    /**
     * 
     * @type {Date}
     * @memberof WorkItemHistory
     */
    revisedDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof WorkItemHistory
     */
    value?: string;
    /**
     * 
     * @type {ReferenceLinks}
     * @memberof WorkItemHistory
     */
    links?: ReferenceLinks;
    /**
     * REST URL for the resource.
     * @type {string}
     * @memberof WorkItemHistory
     */
    url?: string;
}

/**
 * Check if a given object implements the WorkItemHistory interface.
 */
export function instanceOfWorkItemHistory(value: object): value is WorkItemHistory {
    return true;
}

export function WorkItemHistoryFromJSON(json: any): WorkItemHistory {
    return WorkItemHistoryFromJSONTyped(json, false);
}

export function WorkItemHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'rev': json['rev'] == null ? undefined : json['rev'],
        'revisedBy': json['revisedBy'] == null ? undefined : IdentityReferenceFromJSON(json['revisedBy']),
        'revisedDate': json['revisedDate'] == null ? undefined : (new Date(json['revisedDate'])),
        'value': json['value'] == null ? undefined : json['value'],
        'links': json['_links'] == null ? undefined : ReferenceLinksFromJSON(json['_links']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WorkItemHistoryToJSON(json: any): WorkItemHistory {
    return WorkItemHistoryToJSONTyped(json, false);
}

export function WorkItemHistoryToJSONTyped(value?: WorkItemHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rev': value['rev'],
        'revisedBy': IdentityReferenceToJSON(value['revisedBy']),
        'revisedDate': value['revisedDate'] == null ? undefined : ((value['revisedDate']).toISOString()),
        'value': value['value'],
        '_links': ReferenceLinksToJSON(value['links']),
        'url': value['url'],
    };
}

