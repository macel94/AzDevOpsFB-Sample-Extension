/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailRecipients } from './EmailRecipients';
import {
    EmailRecipientsFromJSON,
    EmailRecipientsFromJSONTyped,
    EmailRecipientsToJSON,
    EmailRecipientsToJSONTyped,
} from './EmailRecipients';

/**
 * 
 * @export
 * @interface MailMessage
 */
export interface MailMessage {
    /**
     * The mail body in HTML format.
     * @type {string}
     * @memberof MailMessage
     */
    body?: string;
    /**
     * 
     * @type {EmailRecipients}
     * @memberof MailMessage
     */
    cc?: EmailRecipients;
    /**
     * The in-reply-to header value
     * @type {string}
     * @memberof MailMessage
     */
    inReplyTo?: string;
    /**
     * The Message Id value
     * @type {string}
     * @memberof MailMessage
     */
    messageId?: string;
    /**
     * 
     * @type {EmailRecipients}
     * @memberof MailMessage
     */
    replyTo?: EmailRecipients;
    /**
     * The mail subject.
     * @type {string}
     * @memberof MailMessage
     */
    subject?: string;
    /**
     * 
     * @type {EmailRecipients}
     * @memberof MailMessage
     */
    to?: EmailRecipients;
}

/**
 * Check if a given object implements the MailMessage interface.
 */
export function instanceOfMailMessage(value: object): value is MailMessage {
    return true;
}

export function MailMessageFromJSON(json: any): MailMessage {
    return MailMessageFromJSONTyped(json, false);
}

export function MailMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'body': json['body'] == null ? undefined : json['body'],
        'cc': json['cc'] == null ? undefined : EmailRecipientsFromJSON(json['cc']),
        'inReplyTo': json['inReplyTo'] == null ? undefined : json['inReplyTo'],
        'messageId': json['messageId'] == null ? undefined : json['messageId'],
        'replyTo': json['replyTo'] == null ? undefined : EmailRecipientsFromJSON(json['replyTo']),
        'subject': json['subject'] == null ? undefined : json['subject'],
        'to': json['to'] == null ? undefined : EmailRecipientsFromJSON(json['to']),
    };
}

export function MailMessageToJSON(json: any): MailMessage {
    return MailMessageToJSONTyped(json, false);
}

export function MailMessageToJSONTyped(value?: MailMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'body': value['body'],
        'cc': EmailRecipientsToJSON(value['cc']),
        'inReplyTo': value['inReplyTo'],
        'messageId': value['messageId'],
        'replyTo': EmailRecipientsToJSON(value['replyTo']),
        'subject': value['subject'],
        'to': EmailRecipientsToJSON(value['to']),
    };
}

