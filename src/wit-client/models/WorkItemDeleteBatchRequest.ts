/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Describes a request to delete a set of work items
 * @export
 * @interface WorkItemDeleteBatchRequest
 */
export interface WorkItemDeleteBatchRequest {
    /**
     * Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone.
     * @type {boolean}
     * @memberof WorkItemDeleteBatchRequest
     */
    destroy?: boolean;
    /**
     * The requested work item ids
     * @type {Array<number>}
     * @memberof WorkItemDeleteBatchRequest
     */
    ids?: Array<number>;
    /**
     * Optional parameter, if set to true, notifications will be disabled.
     * @type {boolean}
     * @memberof WorkItemDeleteBatchRequest
     */
    skipNotifications?: boolean;
}

/**
 * Check if a given object implements the WorkItemDeleteBatchRequest interface.
 */
export function instanceOfWorkItemDeleteBatchRequest(value: object): value is WorkItemDeleteBatchRequest {
    return true;
}

export function WorkItemDeleteBatchRequestFromJSON(json: any): WorkItemDeleteBatchRequest {
    return WorkItemDeleteBatchRequestFromJSONTyped(json, false);
}

export function WorkItemDeleteBatchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemDeleteBatchRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'destroy': json['destroy'] == null ? undefined : json['destroy'],
        'ids': json['ids'] == null ? undefined : json['ids'],
        'skipNotifications': json['skipNotifications'] == null ? undefined : json['skipNotifications'],
    };
}

export function WorkItemDeleteBatchRequestToJSON(json: any): WorkItemDeleteBatchRequest {
    return WorkItemDeleteBatchRequestToJSONTyped(json, false);
}

export function WorkItemDeleteBatchRequestToJSONTyped(value?: WorkItemDeleteBatchRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'destroy': value['destroy'],
        'ids': value['ids'],
        'skipNotifications': value['skipNotifications'],
    };
}

