/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Describes a request to get a list of queries
 * @export
 * @interface QueryBatchGetRequest
 */
export interface QueryBatchGetRequest {
    /**
     * The expand parameters for queries. Possible options are { None, Wiql, Clauses, All, Minimal }
     * @type {string}
     * @memberof QueryBatchGetRequest
     */
    $expand?: QueryBatchGetRequestExpandEnum;
    /**
     * The flag to control error policy in a query batch request. Possible options are { Fail, Omit }.
     * @type {string}
     * @memberof QueryBatchGetRequest
     */
    errorPolicy?: QueryBatchGetRequestErrorPolicyEnum;
    /**
     * The requested query ids
     * @type {Array<string>}
     * @memberof QueryBatchGetRequest
     */
    ids?: Array<string>;
}


/**
 * @export
 */
export const QueryBatchGetRequestExpandEnum = {
    None: 'none',
    Wiql: 'wiql',
    Clauses: 'clauses',
    All: 'all',
    Minimal: 'minimal'
} as const;
export type QueryBatchGetRequestExpandEnum = typeof QueryBatchGetRequestExpandEnum[keyof typeof QueryBatchGetRequestExpandEnum];

/**
 * @export
 */
export const QueryBatchGetRequestErrorPolicyEnum = {
    Fail: 'fail',
    Omit: 'omit'
} as const;
export type QueryBatchGetRequestErrorPolicyEnum = typeof QueryBatchGetRequestErrorPolicyEnum[keyof typeof QueryBatchGetRequestErrorPolicyEnum];


/**
 * Check if a given object implements the QueryBatchGetRequest interface.
 */
export function instanceOfQueryBatchGetRequest(value: object): value is QueryBatchGetRequest {
    return true;
}

export function QueryBatchGetRequestFromJSON(json: any): QueryBatchGetRequest {
    return QueryBatchGetRequestFromJSONTyped(json, false);
}

export function QueryBatchGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryBatchGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '$expand': json['$expand'] == null ? undefined : json['$expand'],
        'errorPolicy': json['errorPolicy'] == null ? undefined : json['errorPolicy'],
        'ids': json['ids'] == null ? undefined : json['ids'],
    };
}

export function QueryBatchGetRequestToJSON(json: any): QueryBatchGetRequest {
    return QueryBatchGetRequestToJSONTyped(json, false);
}

export function QueryBatchGetRequestToJSONTyped(value?: QueryBatchGetRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '$expand': value['$expand'],
        'errorPolicy': value['errorPolicy'],
        'ids': value['ids'],
    };
}

