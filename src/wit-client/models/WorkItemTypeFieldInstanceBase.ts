/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkItemFieldReference } from './WorkItemFieldReference';
import {
    WorkItemFieldReferenceFromJSON,
    WorkItemFieldReferenceFromJSONTyped,
    WorkItemFieldReferenceToJSON,
    WorkItemFieldReferenceToJSONTyped,
} from './WorkItemFieldReference';

/**
 * Base field instance for workItemType fields.
 * @export
 * @interface WorkItemTypeFieldInstanceBase
 */
export interface WorkItemTypeFieldInstanceBase {
    /**
     * Indicates whether field value is always required.
     * @type {boolean}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    alwaysRequired?: boolean;
    /**
     * The list of dependent fields.
     * @type {Array<WorkItemFieldReference>}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    dependentFields?: Array<WorkItemFieldReference>;
    /**
     * Gets the help text for the field.
     * @type {string}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    helpText?: string;
    /**
     * The friendly name of the field.
     * @type {string}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    name?: string;
    /**
     * The reference name of the field.
     * @type {string}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    referenceName?: string;
    /**
     * The REST URL of the resource.
     * @type {string}
     * @memberof WorkItemTypeFieldInstanceBase
     */
    url?: string;
}

/**
 * Check if a given object implements the WorkItemTypeFieldInstanceBase interface.
 */
export function instanceOfWorkItemTypeFieldInstanceBase(value: object): value is WorkItemTypeFieldInstanceBase {
    return true;
}

export function WorkItemTypeFieldInstanceBaseFromJSON(json: any): WorkItemTypeFieldInstanceBase {
    return WorkItemTypeFieldInstanceBaseFromJSONTyped(json, false);
}

export function WorkItemTypeFieldInstanceBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemTypeFieldInstanceBase {
    if (json == null) {
        return json;
    }
    return {
        
        'alwaysRequired': json['alwaysRequired'] == null ? undefined : json['alwaysRequired'],
        'dependentFields': json['dependentFields'] == null ? undefined : ((json['dependentFields'] as Array<any>).map(WorkItemFieldReferenceFromJSON)),
        'helpText': json['helpText'] == null ? undefined : json['helpText'],
        'name': json['name'] == null ? undefined : json['name'],
        'referenceName': json['referenceName'] == null ? undefined : json['referenceName'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WorkItemTypeFieldInstanceBaseToJSON(json: any): WorkItemTypeFieldInstanceBase {
    return WorkItemTypeFieldInstanceBaseToJSONTyped(json, false);
}

export function WorkItemTypeFieldInstanceBaseToJSONTyped(value?: WorkItemTypeFieldInstanceBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alwaysRequired': value['alwaysRequired'],
        'dependentFields': value['dependentFields'] == null ? undefined : ((value['dependentFields'] as Array<any>).map(WorkItemFieldReferenceToJSON)),
        'helpText': value['helpText'],
        'name': value['name'],
        'referenceName': value['referenceName'],
        'url': value['url'],
    };
}

