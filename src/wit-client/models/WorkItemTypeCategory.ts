/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceLinks } from './ReferenceLinks';
import {
    ReferenceLinksFromJSON,
    ReferenceLinksFromJSONTyped,
    ReferenceLinksToJSON,
    ReferenceLinksToJSONTyped,
} from './ReferenceLinks';
import type { WorkItemTypeReference } from './WorkItemTypeReference';
import {
    WorkItemTypeReferenceFromJSON,
    WorkItemTypeReferenceFromJSONTyped,
    WorkItemTypeReferenceToJSON,
    WorkItemTypeReferenceToJSONTyped,
} from './WorkItemTypeReference';

/**
 * Describes a work item type category.
 * @export
 * @interface WorkItemTypeCategory
 */
export interface WorkItemTypeCategory {
    /**
     * 
     * @type {WorkItemTypeReference}
     * @memberof WorkItemTypeCategory
     */
    defaultWorkItemType?: WorkItemTypeReference;
    /**
     * The name of the category.
     * @type {string}
     * @memberof WorkItemTypeCategory
     */
    name?: string;
    /**
     * The reference name of the category.
     * @type {string}
     * @memberof WorkItemTypeCategory
     */
    referenceName?: string;
    /**
     * The work item types that belong to the category.
     * @type {Array<WorkItemTypeReference>}
     * @memberof WorkItemTypeCategory
     */
    workItemTypes?: Array<WorkItemTypeReference>;
    /**
     * 
     * @type {ReferenceLinks}
     * @memberof WorkItemTypeCategory
     */
    links?: ReferenceLinks;
    /**
     * REST URL for the resource.
     * @type {string}
     * @memberof WorkItemTypeCategory
     */
    url?: string;
}

/**
 * Check if a given object implements the WorkItemTypeCategory interface.
 */
export function instanceOfWorkItemTypeCategory(value: object): value is WorkItemTypeCategory {
    return true;
}

export function WorkItemTypeCategoryFromJSON(json: any): WorkItemTypeCategory {
    return WorkItemTypeCategoryFromJSONTyped(json, false);
}

export function WorkItemTypeCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemTypeCategory {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultWorkItemType': json['defaultWorkItemType'] == null ? undefined : WorkItemTypeReferenceFromJSON(json['defaultWorkItemType']),
        'name': json['name'] == null ? undefined : json['name'],
        'referenceName': json['referenceName'] == null ? undefined : json['referenceName'],
        'workItemTypes': json['workItemTypes'] == null ? undefined : ((json['workItemTypes'] as Array<any>).map(WorkItemTypeReferenceFromJSON)),
        'links': json['_links'] == null ? undefined : ReferenceLinksFromJSON(json['_links']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WorkItemTypeCategoryToJSON(json: any): WorkItemTypeCategory {
    return WorkItemTypeCategoryToJSONTyped(json, false);
}

export function WorkItemTypeCategoryToJSONTyped(value?: WorkItemTypeCategory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'defaultWorkItemType': WorkItemTypeReferenceToJSON(value['defaultWorkItemType']),
        'name': value['name'],
        'referenceName': value['referenceName'],
        'workItemTypes': value['workItemTypes'] == null ? undefined : ((value['workItemTypes'] as Array<any>).map(WorkItemTypeReferenceToJSON)),
        '_links': ReferenceLinksToJSON(value['links']),
        'url': value['url'],
    };
}

