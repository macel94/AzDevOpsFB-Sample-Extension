/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkItem } from './WorkItem';
import {
    WorkItemFromJSON,
    WorkItemFromJSONTyped,
    WorkItemToJSON,
    WorkItemToJSONTyped,
} from './WorkItem';

/**
 * Full deleted work item object. Includes the work item itself.
 * @export
 * @interface WorkItemDelete
 */
export interface WorkItemDelete {
    /**
     * 
     * @type {WorkItem}
     * @memberof WorkItemDelete
     */
    resource?: WorkItem;
    /**
     * The HTTP status code for work item operation in a batch request.
     * @type {number}
     * @memberof WorkItemDelete
     */
    code?: number;
    /**
     * The user who deleted the work item type.
     * @type {string}
     * @memberof WorkItemDelete
     */
    deletedBy?: string;
    /**
     * The work item deletion date.
     * @type {string}
     * @memberof WorkItemDelete
     */
    deletedDate?: string;
    /**
     * Work item ID.
     * @type {number}
     * @memberof WorkItemDelete
     */
    id?: number;
    /**
     * The exception message for work item operation in a batch request.
     * @type {string}
     * @memberof WorkItemDelete
     */
    message?: string;
    /**
     * Name or title of the work item.
     * @type {string}
     * @memberof WorkItemDelete
     */
    name?: string;
    /**
     * Parent project of the deleted work item.
     * @type {string}
     * @memberof WorkItemDelete
     */
    project?: string;
    /**
     * Type of work item.
     * @type {string}
     * @memberof WorkItemDelete
     */
    type?: string;
    /**
     * REST API URL of the resource
     * @type {string}
     * @memberof WorkItemDelete
     */
    url?: string;
}

/**
 * Check if a given object implements the WorkItemDelete interface.
 */
export function instanceOfWorkItemDelete(value: object): value is WorkItemDelete {
    return true;
}

export function WorkItemDeleteFromJSON(json: any): WorkItemDelete {
    return WorkItemDeleteFromJSONTyped(json, false);
}

export function WorkItemDeleteFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemDelete {
    if (json == null) {
        return json;
    }
    return {
        
        'resource': json['resource'] == null ? undefined : WorkItemFromJSON(json['resource']),
        'code': json['code'] == null ? undefined : json['code'],
        'deletedBy': json['deletedBy'] == null ? undefined : json['deletedBy'],
        'deletedDate': json['deletedDate'] == null ? undefined : json['deletedDate'],
        'id': json['id'] == null ? undefined : json['id'],
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'] == null ? undefined : json['name'],
        'project': json['project'] == null ? undefined : json['project'],
        'type': json['type'] == null ? undefined : json['type'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WorkItemDeleteToJSON(json: any): WorkItemDelete {
    return WorkItemDeleteToJSONTyped(json, false);
}

export function WorkItemDeleteToJSONTyped(value?: WorkItemDelete | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'resource': WorkItemToJSON(value['resource']),
        'code': value['code'],
        'deletedBy': value['deletedBy'],
        'deletedDate': value['deletedDate'],
        'id': value['id'],
        'message': value['message'],
        'name': value['name'],
        'project': value['project'],
        'type': value['type'],
        'url': value['url'],
    };
}

