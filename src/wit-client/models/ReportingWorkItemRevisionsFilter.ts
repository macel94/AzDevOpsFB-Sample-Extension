/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The class represents the reporting work item revision filer.
 * @export
 * @interface ReportingWorkItemRevisionsFilter
 */
export interface ReportingWorkItemRevisionsFilter {
    /**
     * A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.
     * @type {Array<string>}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    fields?: Array<string>;
    /**
     * Include deleted work item in the result.
     * @type {boolean}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    includeDeleted?: boolean;
    /**
     * Return an identity reference instead of a string value for identity fields.
     * @type {boolean}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    includeIdentityRef?: boolean;
    /**
     * Include only the latest version of a work item, skipping over all previous revisions of the work item.
     * @type {boolean}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    includeLatestOnly?: boolean;
    /**
     * Include tag reference instead of string value for System.Tags field
     * @type {boolean}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    includeTagRef?: boolean;
    /**
     * A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.
     * @type {Array<string>}
     * @memberof ReportingWorkItemRevisionsFilter
     */
    types?: Array<string>;
}

/**
 * Check if a given object implements the ReportingWorkItemRevisionsFilter interface.
 */
export function instanceOfReportingWorkItemRevisionsFilter(value: object): value is ReportingWorkItemRevisionsFilter {
    return true;
}

export function ReportingWorkItemRevisionsFilterFromJSON(json: any): ReportingWorkItemRevisionsFilter {
    return ReportingWorkItemRevisionsFilterFromJSONTyped(json, false);
}

export function ReportingWorkItemRevisionsFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportingWorkItemRevisionsFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : json['fields'],
        'includeDeleted': json['includeDeleted'] == null ? undefined : json['includeDeleted'],
        'includeIdentityRef': json['includeIdentityRef'] == null ? undefined : json['includeIdentityRef'],
        'includeLatestOnly': json['includeLatestOnly'] == null ? undefined : json['includeLatestOnly'],
        'includeTagRef': json['includeTagRef'] == null ? undefined : json['includeTagRef'],
        'types': json['types'] == null ? undefined : json['types'],
    };
}

export function ReportingWorkItemRevisionsFilterToJSON(json: any): ReportingWorkItemRevisionsFilter {
    return ReportingWorkItemRevisionsFilterToJSONTyped(json, false);
}

export function ReportingWorkItemRevisionsFilterToJSONTyped(value?: ReportingWorkItemRevisionsFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'],
        'includeDeleted': value['includeDeleted'],
        'includeIdentityRef': value['includeIdentityRef'],
        'includeLatestOnly': value['includeLatestOnly'],
        'includeTagRef': value['includeTagRef'],
        'types': value['types'],
    };
}

