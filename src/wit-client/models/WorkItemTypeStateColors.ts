/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkItemStateColor } from './WorkItemStateColor';
import {
    WorkItemStateColorFromJSON,
    WorkItemStateColorFromJSONTyped,
    WorkItemStateColorToJSON,
    WorkItemStateColorToJSONTyped,
} from './WorkItemStateColor';

/**
 * State colors for a work item type
 * @export
 * @interface WorkItemTypeStateColors
 */
export interface WorkItemTypeStateColors {
    /**
     * Work item type state colors
     * @type {Array<WorkItemStateColor>}
     * @memberof WorkItemTypeStateColors
     */
    stateColors?: Array<WorkItemStateColor>;
    /**
     * Work item type name
     * @type {string}
     * @memberof WorkItemTypeStateColors
     */
    workItemTypeName?: string;
}

/**
 * Check if a given object implements the WorkItemTypeStateColors interface.
 */
export function instanceOfWorkItemTypeStateColors(value: object): value is WorkItemTypeStateColors {
    return true;
}

export function WorkItemTypeStateColorsFromJSON(json: any): WorkItemTypeStateColors {
    return WorkItemTypeStateColorsFromJSONTyped(json, false);
}

export function WorkItemTypeStateColorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemTypeStateColors {
    if (json == null) {
        return json;
    }
    return {
        
        'stateColors': json['stateColors'] == null ? undefined : ((json['stateColors'] as Array<any>).map(WorkItemStateColorFromJSON)),
        'workItemTypeName': json['workItemTypeName'] == null ? undefined : json['workItemTypeName'],
    };
}

export function WorkItemTypeStateColorsToJSON(json: any): WorkItemTypeStateColors {
    return WorkItemTypeStateColorsToJSONTyped(json, false);
}

export function WorkItemTypeStateColorsToJSONTyped(value?: WorkItemTypeStateColors | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'stateColors': value['stateColors'] == null ? undefined : ((value['stateColors'] as Array<any>).map(WorkItemStateColorToJSON)),
        'workItemTypeName': value['workItemTypeName'],
    };
}

