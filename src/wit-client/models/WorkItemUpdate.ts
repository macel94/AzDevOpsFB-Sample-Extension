/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentityReference } from './IdentityReference';
import {
    IdentityReferenceFromJSON,
    IdentityReferenceFromJSONTyped,
    IdentityReferenceToJSON,
    IdentityReferenceToJSONTyped,
} from './IdentityReference';
import type { ReferenceLinks } from './ReferenceLinks';
import {
    ReferenceLinksFromJSON,
    ReferenceLinksFromJSONTyped,
    ReferenceLinksToJSON,
    ReferenceLinksToJSONTyped,
} from './ReferenceLinks';
import type { WorkItemFieldUpdate } from './WorkItemFieldUpdate';
import {
    WorkItemFieldUpdateFromJSON,
    WorkItemFieldUpdateFromJSONTyped,
    WorkItemFieldUpdateToJSON,
    WorkItemFieldUpdateToJSONTyped,
} from './WorkItemFieldUpdate';
import type { WorkItemRelationUpdates } from './WorkItemRelationUpdates';
import {
    WorkItemRelationUpdatesFromJSON,
    WorkItemRelationUpdatesFromJSONTyped,
    WorkItemRelationUpdatesToJSON,
    WorkItemRelationUpdatesToJSONTyped,
} from './WorkItemRelationUpdates';

/**
 * Describes an update to a work item.
 * @export
 * @interface WorkItemUpdate
 */
export interface WorkItemUpdate {
    /**
     * List of updates to fields.
     * @type {{ [key: string]: WorkItemFieldUpdate; }}
     * @memberof WorkItemUpdate
     */
    fields?: { [key: string]: WorkItemFieldUpdate; };
    /**
     * ID of update.
     * @type {number}
     * @memberof WorkItemUpdate
     */
    id?: number;
    /**
     * 
     * @type {WorkItemRelationUpdates}
     * @memberof WorkItemUpdate
     */
    relations?: WorkItemRelationUpdates;
    /**
     * The revision number of work item update.
     * @type {number}
     * @memberof WorkItemUpdate
     */
    rev?: number;
    /**
     * 
     * @type {IdentityReference}
     * @memberof WorkItemUpdate
     */
    revisedBy?: IdentityReference;
    /**
     * The work item updates revision date.
     * @type {Date}
     * @memberof WorkItemUpdate
     */
    revisedDate?: Date;
    /**
     * The work item ID.
     * @type {number}
     * @memberof WorkItemUpdate
     */
    workItemId?: number;
    /**
     * 
     * @type {ReferenceLinks}
     * @memberof WorkItemUpdate
     */
    links?: ReferenceLinks;
    /**
     * REST URL for the resource.
     * @type {string}
     * @memberof WorkItemUpdate
     */
    url?: string;
}

/**
 * Check if a given object implements the WorkItemUpdate interface.
 */
export function instanceOfWorkItemUpdate(value: object): value is WorkItemUpdate {
    return true;
}

export function WorkItemUpdateFromJSON(json: any): WorkItemUpdate {
    return WorkItemUpdateFromJSONTyped(json, false);
}

export function WorkItemUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'fields': json['fields'] == null ? undefined : (mapValues(json['fields'], WorkItemFieldUpdateFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'relations': json['relations'] == null ? undefined : WorkItemRelationUpdatesFromJSON(json['relations']),
        'rev': json['rev'] == null ? undefined : json['rev'],
        'revisedBy': json['revisedBy'] == null ? undefined : IdentityReferenceFromJSON(json['revisedBy']),
        'revisedDate': json['revisedDate'] == null ? undefined : (new Date(json['revisedDate'])),
        'workItemId': json['workItemId'] == null ? undefined : json['workItemId'],
        'links': json['_links'] == null ? undefined : ReferenceLinksFromJSON(json['_links']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function WorkItemUpdateToJSON(json: any): WorkItemUpdate {
    return WorkItemUpdateToJSONTyped(json, false);
}

export function WorkItemUpdateToJSONTyped(value?: WorkItemUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fields': value['fields'] == null ? undefined : (mapValues(value['fields'], WorkItemFieldUpdateToJSON)),
        'id': value['id'],
        'relations': WorkItemRelationUpdatesToJSON(value['relations']),
        'rev': value['rev'],
        'revisedBy': IdentityReferenceToJSON(value['revisedBy']),
        'revisedDate': value['revisedDate'] == null ? undefined : ((value['revisedDate']).toISOString()),
        'workItemId': value['workItemId'],
        '_links': ReferenceLinksToJSON(value['links']),
        'url': value['url'],
    };
}

