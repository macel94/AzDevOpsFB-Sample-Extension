/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceLinks } from './ReferenceLinks';
import {
    ReferenceLinksFromJSON,
    ReferenceLinksFromJSONTyped,
    ReferenceLinksToJSON,
    ReferenceLinksToJSONTyped,
} from './ReferenceLinks';
import type { WorkItemFieldReference } from './WorkItemFieldReference';
import {
    WorkItemFieldReferenceFromJSON,
    WorkItemFieldReferenceFromJSONTyped,
    WorkItemFieldReferenceToJSON,
    WorkItemFieldReferenceToJSONTyped,
} from './WorkItemFieldReference';

/**
 * Describes a list of dependent fields for a rule.
 * @export
 * @interface FieldDependentRule
 */
export interface FieldDependentRule {
    /**
     * The dependent fields.
     * @type {Array<WorkItemFieldReference>}
     * @memberof FieldDependentRule
     */
    dependentFields?: Array<WorkItemFieldReference>;
    /**
     * 
     * @type {ReferenceLinks}
     * @memberof FieldDependentRule
     */
    links?: ReferenceLinks;
    /**
     * REST URL for the resource.
     * @type {string}
     * @memberof FieldDependentRule
     */
    url?: string;
}

/**
 * Check if a given object implements the FieldDependentRule interface.
 */
export function instanceOfFieldDependentRule(value: object): value is FieldDependentRule {
    return true;
}

export function FieldDependentRuleFromJSON(json: any): FieldDependentRule {
    return FieldDependentRuleFromJSONTyped(json, false);
}

export function FieldDependentRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldDependentRule {
    if (json == null) {
        return json;
    }
    return {
        
        'dependentFields': json['dependentFields'] == null ? undefined : ((json['dependentFields'] as Array<any>).map(WorkItemFieldReferenceFromJSON)),
        'links': json['_links'] == null ? undefined : ReferenceLinksFromJSON(json['_links']),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function FieldDependentRuleToJSON(json: any): FieldDependentRule {
    return FieldDependentRuleToJSONTyped(json, false);
}

export function FieldDependentRuleToJSONTyped(value?: FieldDependentRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dependentFields': value['dependentFields'] == null ? undefined : ((value['dependentFields'] as Array<any>).map(WorkItemFieldReferenceToJSON)),
        '_links': ReferenceLinksToJSON(value['links']),
        'url': value['url'],
    };
}

