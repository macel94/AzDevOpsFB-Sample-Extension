/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { QueryHierarchyItem } from './QueryHierarchyItem';
import {
    QueryHierarchyItemFromJSON,
    QueryHierarchyItemFromJSONTyped,
    QueryHierarchyItemToJSON,
    QueryHierarchyItemToJSONTyped,
} from './QueryHierarchyItem';

/**
 * 
 * @export
 * @interface QueryHierarchyItemsResult
 */
export interface QueryHierarchyItemsResult {
    /**
     * The count of items.
     * @type {number}
     * @memberof QueryHierarchyItemsResult
     */
    count?: number;
    /**
     * Indicates if the max return limit was hit but there are still more items
     * @type {boolean}
     * @memberof QueryHierarchyItemsResult
     */
    hasMore?: boolean;
    /**
     * The list of items
     * @type {Array<QueryHierarchyItem>}
     * @memberof QueryHierarchyItemsResult
     */
    value?: Array<QueryHierarchyItem>;
}

/**
 * Check if a given object implements the QueryHierarchyItemsResult interface.
 */
export function instanceOfQueryHierarchyItemsResult(value: object): value is QueryHierarchyItemsResult {
    return true;
}

export function QueryHierarchyItemsResultFromJSON(json: any): QueryHierarchyItemsResult {
    return QueryHierarchyItemsResultFromJSONTyped(json, false);
}

export function QueryHierarchyItemsResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryHierarchyItemsResult {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'hasMore': json['hasMore'] == null ? undefined : json['hasMore'],
        'value': json['value'] == null ? undefined : ((json['value'] as Array<any>).map(QueryHierarchyItemFromJSON)),
    };
}

export function QueryHierarchyItemsResultToJSON(json: any): QueryHierarchyItemsResult {
    return QueryHierarchyItemsResultToJSONTyped(json, false);
}

export function QueryHierarchyItemsResultToJSONTyped(value?: QueryHierarchyItemsResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'hasMore': value['hasMore'],
        'value': value['value'] == null ? undefined : ((value['value'] as Array<any>).map(QueryHierarchyItemToJSON)),
    };
}

