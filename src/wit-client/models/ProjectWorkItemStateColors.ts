/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkItemTypeStateColors } from './WorkItemTypeStateColors';
import {
    WorkItemTypeStateColorsFromJSON,
    WorkItemTypeStateColorsFromJSONTyped,
    WorkItemTypeStateColorsToJSON,
    WorkItemTypeStateColorsToJSONTyped,
} from './WorkItemTypeStateColors';

/**
 * Project work item type state colors
 * @export
 * @interface ProjectWorkItemStateColors
 */
export interface ProjectWorkItemStateColors {
    /**
     * Project name
     * @type {string}
     * @memberof ProjectWorkItemStateColors
     */
    projectName?: string;
    /**
     * State colors for all work item type in a project
     * @type {Array<WorkItemTypeStateColors>}
     * @memberof ProjectWorkItemStateColors
     */
    workItemTypeStateColors?: Array<WorkItemTypeStateColors>;
}

/**
 * Check if a given object implements the ProjectWorkItemStateColors interface.
 */
export function instanceOfProjectWorkItemStateColors(value: object): value is ProjectWorkItemStateColors {
    return true;
}

export function ProjectWorkItemStateColorsFromJSON(json: any): ProjectWorkItemStateColors {
    return ProjectWorkItemStateColorsFromJSONTyped(json, false);
}

export function ProjectWorkItemStateColorsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectWorkItemStateColors {
    if (json == null) {
        return json;
    }
    return {
        
        'projectName': json['projectName'] == null ? undefined : json['projectName'],
        'workItemTypeStateColors': json['workItemTypeStateColors'] == null ? undefined : ((json['workItemTypeStateColors'] as Array<any>).map(WorkItemTypeStateColorsFromJSON)),
    };
}

export function ProjectWorkItemStateColorsToJSON(json: any): ProjectWorkItemStateColors {
    return ProjectWorkItemStateColorsToJSONTyped(json, false);
}

export function ProjectWorkItemStateColorsToJSONTyped(value?: ProjectWorkItemStateColors | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectName': value['projectName'],
        'workItemTypeStateColors': value['workItemTypeStateColors'] == null ? undefined : ((value['workItemTypeStateColors'] as Array<any>).map(WorkItemTypeStateColorsToJSON)),
    };
}

