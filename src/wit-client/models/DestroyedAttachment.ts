/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AttachmentReference } from './AttachmentReference';
import {
    AttachmentReferenceFromJSON,
    AttachmentReferenceFromJSONTyped,
    AttachmentReferenceToJSON,
    AttachmentReferenceToJSONTyped,
} from './AttachmentReference';
import type { WorkItemReference } from './WorkItemReference';
import {
    WorkItemReferenceFromJSON,
    WorkItemReferenceFromJSONTyped,
    WorkItemReferenceToJSON,
    WorkItemReferenceToJSONTyped,
} from './WorkItemReference';

/**
 * Describes permanently deleted attachment and work items that had links to this attachment.
 * @export
 * @interface DestroyedAttachment
 */
export interface DestroyedAttachment {
    /**
     * Work items with attachment references that have been marked as deleted.
     * @type {Array<WorkItemReference>}
     * @memberof DestroyedAttachment
     */
    affectedWorkItems?: Array<WorkItemReference>;
    /**
     * 
     * @type {AttachmentReference}
     * @memberof DestroyedAttachment
     */
    attachment?: AttachmentReference;
}

/**
 * Check if a given object implements the DestroyedAttachment interface.
 */
export function instanceOfDestroyedAttachment(value: object): value is DestroyedAttachment {
    return true;
}

export function DestroyedAttachmentFromJSON(json: any): DestroyedAttachment {
    return DestroyedAttachmentFromJSONTyped(json, false);
}

export function DestroyedAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestroyedAttachment {
    if (json == null) {
        return json;
    }
    return {
        
        'affectedWorkItems': json['affectedWorkItems'] == null ? undefined : ((json['affectedWorkItems'] as Array<any>).map(WorkItemReferenceFromJSON)),
        'attachment': json['attachment'] == null ? undefined : AttachmentReferenceFromJSON(json['attachment']),
    };
}

export function DestroyedAttachmentToJSON(json: any): DestroyedAttachment {
    return DestroyedAttachmentToJSONTyped(json, false);
}

export function DestroyedAttachmentToJSONTyped(value?: DestroyedAttachment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'affectedWorkItems': value['affectedWorkItems'] == null ? undefined : ((value['affectedWorkItems'] as Array<any>).map(WorkItemReferenceToJSON)),
        'attachment': AttachmentReferenceToJSON(value['attachment']),
    };
}

