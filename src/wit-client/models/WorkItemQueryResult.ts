/* tslint:disable */
/* eslint-disable */
/**
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkItemLink } from './WorkItemLink';
import {
    WorkItemLinkFromJSON,
    WorkItemLinkFromJSONTyped,
    WorkItemLinkToJSON,
    WorkItemLinkToJSONTyped,
} from './WorkItemLink';
import type { WorkItemQuerySortColumn } from './WorkItemQuerySortColumn';
import {
    WorkItemQuerySortColumnFromJSON,
    WorkItemQuerySortColumnFromJSONTyped,
    WorkItemQuerySortColumnToJSON,
    WorkItemQuerySortColumnToJSONTyped,
} from './WorkItemQuerySortColumn';
import type { WorkItemReference } from './WorkItemReference';
import {
    WorkItemReferenceFromJSON,
    WorkItemReferenceFromJSONTyped,
    WorkItemReferenceToJSON,
    WorkItemReferenceToJSONTyped,
} from './WorkItemReference';
import type { WorkItemFieldReference } from './WorkItemFieldReference';
import {
    WorkItemFieldReferenceFromJSON,
    WorkItemFieldReferenceFromJSONTyped,
    WorkItemFieldReferenceToJSON,
    WorkItemFieldReferenceToJSONTyped,
} from './WorkItemFieldReference';

/**
 * The result of a work item query.
 * @export
 * @interface WorkItemQueryResult
 */
export interface WorkItemQueryResult {
    /**
     * The date the query was run in the context of.
     * @type {Date}
     * @memberof WorkItemQueryResult
     */
    asOf?: Date;
    /**
     * The columns of the query.
     * @type {Array<WorkItemFieldReference>}
     * @memberof WorkItemQueryResult
     */
    columns?: Array<WorkItemFieldReference>;
    /**
     * The result type
     * @type {string}
     * @memberof WorkItemQueryResult
     */
    queryResultType?: WorkItemQueryResultQueryResultTypeEnum;
    /**
     * The type of the query
     * @type {string}
     * @memberof WorkItemQueryResult
     */
    queryType?: WorkItemQueryResultQueryTypeEnum;
    /**
     * The sort columns of the query.
     * @type {Array<WorkItemQuerySortColumn>}
     * @memberof WorkItemQueryResult
     */
    sortColumns?: Array<WorkItemQuerySortColumn>;
    /**
     * The work item links returned by the query.
     * @type {Array<WorkItemLink>}
     * @memberof WorkItemQueryResult
     */
    workItemRelations?: Array<WorkItemLink>;
    /**
     * The work items returned by the query.
     * @type {Array<WorkItemReference>}
     * @memberof WorkItemQueryResult
     */
    workItems?: Array<WorkItemReference>;
}


/**
 * @export
 */
export const WorkItemQueryResultQueryResultTypeEnum = {
    WorkItem: 'workItem',
    WorkItemLink: 'workItemLink'
} as const;
export type WorkItemQueryResultQueryResultTypeEnum = typeof WorkItemQueryResultQueryResultTypeEnum[keyof typeof WorkItemQueryResultQueryResultTypeEnum];

/**
 * @export
 */
export const WorkItemQueryResultQueryTypeEnum = {
    Flat: 'flat',
    Tree: 'tree',
    OneHop: 'oneHop'
} as const;
export type WorkItemQueryResultQueryTypeEnum = typeof WorkItemQueryResultQueryTypeEnum[keyof typeof WorkItemQueryResultQueryTypeEnum];


/**
 * Check if a given object implements the WorkItemQueryResult interface.
 */
export function instanceOfWorkItemQueryResult(value: object): value is WorkItemQueryResult {
    return true;
}

export function WorkItemQueryResultFromJSON(json: any): WorkItemQueryResult {
    return WorkItemQueryResultFromJSONTyped(json, false);
}

export function WorkItemQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkItemQueryResult {
    if (json == null) {
        return json;
    }
    return {
        
        'asOf': json['asOf'] == null ? undefined : (new Date(json['asOf'])),
        'columns': json['columns'] == null ? undefined : ((json['columns'] as Array<any>).map(WorkItemFieldReferenceFromJSON)),
        'queryResultType': json['queryResultType'] == null ? undefined : json['queryResultType'],
        'queryType': json['queryType'] == null ? undefined : json['queryType'],
        'sortColumns': json['sortColumns'] == null ? undefined : ((json['sortColumns'] as Array<any>).map(WorkItemQuerySortColumnFromJSON)),
        'workItemRelations': json['workItemRelations'] == null ? undefined : ((json['workItemRelations'] as Array<any>).map(WorkItemLinkFromJSON)),
        'workItems': json['workItems'] == null ? undefined : ((json['workItems'] as Array<any>).map(WorkItemReferenceFromJSON)),
    };
}

export function WorkItemQueryResultToJSON(json: any): WorkItemQueryResult {
    return WorkItemQueryResultToJSONTyped(json, false);
}

export function WorkItemQueryResultToJSONTyped(value?: WorkItemQueryResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'asOf': value['asOf'] == null ? undefined : ((value['asOf']).toISOString()),
        'columns': value['columns'] == null ? undefined : ((value['columns'] as Array<any>).map(WorkItemFieldReferenceToJSON)),
        'queryResultType': value['queryResultType'],
        'queryType': value['queryType'],
        'sortColumns': value['sortColumns'] == null ? undefined : ((value['sortColumns'] as Array<any>).map(WorkItemQuerySortColumnToJSON)),
        'workItemRelations': value['workItemRelations'] == null ? undefined : ((value['workItemRelations'] as Array<any>).map(WorkItemLinkToJSON)),
        'workItems': value['workItems'] == null ? undefined : ((value['workItems'] as Array<any>).map(WorkItemReferenceToJSON)),
    };
}

